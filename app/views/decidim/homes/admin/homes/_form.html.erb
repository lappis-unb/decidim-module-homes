<div class="card">
  <div class="card-divider">
    <h2 class="card-title toggle-settings">
      Configurações Avançadas
    </h2>
  </div>
  <div class="card-section settings-section">
    <div class="row column">
      <%= form.text_field :digital_stage, label: t("models.components.digital_stage", scope: "decidim.homes.admin") %>

      <%= form.text_field :organize_stage, label: t("models.components.organize_stage", scope: "decidim.homes.admin") %>

      <%= form.text_field :schedule, label: t("models.components.schedule", scope: "decidim.homes.admin") %>

      <%= form.text_field :common_questions, label: t("models.components.common_questions", scope: "decidim.homes.admin") %>

      <%= form.check_box :news, label: t("models.components.news", scope: "decidim.homes.admin") %>
      <!-- Display the news_id field only when the news checkbox is checked -->
      <div id="news-id-field" style="<%= 'display: none;' unless @home.news %>">
        <%= form.number_field :news_id, label: t("models.components.news_id", scope: "decidim.homes.admin") %>
      </div>
    </div>
  </div>
</div>

<div style="display: none">
  <%= form.file_field :banner, style: 'display: none;', id: 'banner-image-input' %>
  <%= form.file_field :organizers, multiple: true, style: 'display: none;', id: 'organizers-image-input' %>
  <%= form.file_field :supporters, multiple: true, style: 'display: none;', id: 'supporters-image-input' %>
</div>

<script>
  $(document).ready(function() {
    $(".settings-section").hide();

    $(".toggle-settings").on("click", function() {
      $(".settings-section").slideToggle();
    });

    // Add an event listener to toggle the visibility of the news_id field
    $(document).on("change", "#home_news", function () {
      var newsIdField = $("#news-id-field");

      // Use jQuery to toggle the visibility of the news_id field
      newsIdField.toggle($(this).is(":checked"));
    });

    $("#home_banner").on("change", function(e) {
      showImagePreview(e.target.files[0], $(".banner-container"));
    });

    $("#home_organizers").on("change", function(e) {
      showImagePreviews(e.target.files, $(".organizers-container"));
    });

    $("#home_supporters").on("change", function(e) {
      showImagePreviews(e.target.files, $(".supporters-container"));
    });

    function showImagePreview(file, container) {
      var reader = new FileReader();
      reader.onload = function(e) {
        console.log(e.target);
        container.html('<img class="banner-image" src="' + e.target.result + '" alt="Imagem"/>');
      };
      reader.readAsDataURL(file);
    }

    function showImagePreviews(files, container) {
      container.html("");
      for (var i = 0; i < files.length; i++) {
        showImagePreview(files[i], container);
      }
    }

    // Adicione um evento de mudança para o campo de arquivo dos organizadores
    $("#home_organizers").on("change", function(e) {
      showAndStoreImages(e.target.files, $(".organizers-container"));
    });

    // Adicione um evento de mudança para o campo de arquivo dos apoiadores
    $("#home_supporters").on("change", function(e) {
      showAndStoreImages(e.target.files, $(".supporters-container"));
    });

    // Função para exibir e armazenar imagens no campo de entrada de arquivo oculto
    function showAndStoreImages(files, container) {
      container.html(""); // Limpa o contêiner antes de adicionar novas imagens

      var uploadedImagesInput = $("#uploaded-images-input");
      var existingImages = uploadedImagesInput.data("existing-images") || [];

      for (var i = 0; i < files.length; i++) {
        var reader = new FileReader();
        reader.onload = function(e) {
          container.append('<div class="image-preview"><img src="' + e.target.result + '" alt="Imagem"/><button class="remove-image">Remover</button></div>');
        };
        reader.readAsDataURL(files[i]);

        existingImages.push(null); // Adiciona uma entrada nula para imagens recém-adicionadas
      }

      // Atualiza os dados do campo de entrada de arquivo oculto
      uploadedImagesInput.val("");
      uploadedImagesInput.data("existing-images", existingImages);
    }

    // Adiciona um evento de clique para remover imagens
    $(document).on("click", ".remove-image", function() {
      var index = $(this).parent().index();
      var uploadedImagesInput = $("#uploaded-images-input");
      var existingImages = uploadedImagesInput.data("existing-images");

      if (index < existingImages.length) {
        existingImages.splice(index, 1); // Remove a entrada correspondente
        uploadedImagesInput.data("existing-images", existingImages);
      }

      $(this).parent().remove();
    });

    // Adiciona um evento de envio do formulário para atualizar o campo de entrada de arquivo
    $("form").on("submit", function() {
      updateUploadedImagesInput();
    });

    // Função para atualizar o campo de entrada de arquivo com as imagens existentes
    function updateUploadedImagesInput() {
      var uploadedImagesInput = $("#uploaded-images-input");
      var existingImages = uploadedImagesInput.data("existing-images") || [];

      // Atualiza o valor do campo de entrada de arquivo com as imagens existentes
      uploadedImagesInput.val(existingImages.filter(Boolean).join(","));
    }
  });
</script>

<style>
  .banner-container,
  .supporters-container,
  .organizers-container{
    margin: 5px;
  }

  .form h3{
    margin: 1rem;
  }
</style>
